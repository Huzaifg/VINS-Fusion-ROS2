%YAML:1.0

#common parameters
imu: 1
num_of_cam: 2  # 1 or 2

imu_topic: "/ARTcar/imu"
image0_topic: "/ARTcar/left_camera_flipped"
image1_topic: "/ARTcar/right_camera_flipped"
output_path: "/sbel/Desktop"

cam0_calib: "cam0_chrono.yaml"
cam1_calib: "cam1_chrono.yaml"
image_width: 1280
image_height: 720

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.

#cam0 to body
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   # data: [0, -1, 0, 0.21,
         #  0, 0, -1, 0.25,
         #  1, 0, 0, 0.05,
         #  0, 0, 0, 1]
   data: [0, 0, -1, -21,
          -1, 0, 0, 2.5,
          0, 1, 0, 0,
          0, 0, 0, 1]
   # data: [1, 0, 0, 21,
   #        0, 1, 0, 25,
   #        0, 0, 1, 5,
   #        0, 0, 0, 1]

#cam1 to body
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   # data: [0, -1, 0, 0.21,
         #  0, 0, -1, -0.25,
         #  1, 0, 0, 0.05,
         #  0, 0, 0, 1]
   data: [0, 0, -1, -21,
          -1, 0, 0, -2.5,
          0, 1, 0, 0,
          0, 0, 0, 1]
   # data: [1, 0, 0, 21,
   #        0, 1, 0, -25,
   #        0, 0, 1, 5,
   #        0, 0, 0, 1]


#Multiple thread support
multiple_thread: 0

# max_cnt: 150            # max feature number in feature tracking
# min_dist: 30            # min distance between two features 
# freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
# F_threshold: 1.0        # ransac threshold (pixel)
# show_track: 1           # publish tracking image as topic
# flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

# #imu parameters       The more accurate parameters you provide, the better performance
# acc_n: 0.2          # accelerometer measurement noise standard deviation. #0.2
# gyr_n: 0.05         # gyroscope measurement noise standard deviation.     #0.05
# acc_w: 0.02         # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 4.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.805     # gravity magnitude

# acc_n: 20          # accelerometer measurement noise standard deviation. #0.2
# gyr_n: 5         # gyroscope measurement noise standard deviation.     #0.05
# acc_w: 2         # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 4.0e-1       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.805     # gravity magnitude

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.001          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.001         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.0001         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805     # gravity magnitude

#unsynchronization parameters
estimate_td: 0.                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 1        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
